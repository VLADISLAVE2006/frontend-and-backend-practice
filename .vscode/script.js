// script.js - –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ä–∞–±–æ—á–∞—è –≤–µ—Ä—Å–∏—è

// –ú–µ–Ω–µ–¥–∂–µ—Ä —Ç–µ–º—ã
class ThemeManager {
    constructor() {
        this.themeToggle = document.querySelector('.theme-toggle__button');
        this.currentTheme = localStorage.getItem('theme') || 'light';
        this.init();
    }

    init() {
        this.applyTheme(this.currentTheme);
        this.bindEvents();
    }

    bindEvents() {
        if (this.themeToggle) {
            this.themeToggle.addEventListener('click', () => {
                this.toggleTheme();
            });
        }
    }

    toggleTheme() {
        this.currentTheme = this.currentTheme === 'light' ? 'dark' : 'light';
        this.applyTheme(this.currentTheme);
        this.saveTheme();
    }

    applyTheme(theme) {
        document.body.className = `theme--${theme}`;
        const icon = this.themeToggle?.querySelector('.theme-toggle__icon');
        if (icon) {
            icon.textContent = theme === 'light' ? 'üåô' : '‚òÄÔ∏è';
        }
    }

    saveTheme() {
        localStorage.setItem('theme', this.currentTheme);
    }
}

// –ú–µ–Ω–µ–¥–∂–µ—Ä –∫–∞—Ä—Ç–æ—á–µ–∫
class CardManager {
    constructor() {
        this.cards = document.querySelectorAll('.card');
        this.init();
    }

    init() {
        this.bindCardEvents();
    }

    bindCardEvents() {
        this.cards.forEach(card => {
            card.addEventListener('click', (e) => {
                if (!e.target.closest('.card__button')) {
                    this.toggleCardSelection(card);
                }
            });
        });
    }

    toggleCardSelection(card) {
        const isSelected = card.classList.contains('card--selected');
        
        if (isSelected) {
            card.classList.remove('card--selected');
        } else {
            card.classList.add('card--selected');
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    new ThemeManager();
    new CardManager();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    const contactModal = document.getElementById('contactModal');
    if (contactModal) {
        initModal(contactModal);
    }
});

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
function initModal(modal) {
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ —Ñ–æ–Ω
    modal.addEventListener('click', function(event) {
        if (event.target === this) {
            this.close();
        }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ ESC
    document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape' && modal.open) {
            modal.close();
        }
    });
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
function copyToClipboard(text) {
    navigator.clipboard.writeText(text).then(() => {
        alert('–¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞: ' + text);
    });
}

function showOnMap() {
    alert('–§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –Ω–∞ –∫–∞—Ä—Ç–µ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø–æ–∑–∂–µ');
}

function callNumber(number) {
    alert('–ò–º–∏—Ç–∞—Ü–∏—è –∑–≤–æ–Ω–∫–∞ –Ω–∞ –Ω–æ–º–µ—Ä: ' + number);
}

function openSocial(network) {
    const networks = {
        vk: 'https://vk.com',
        tg: 'https://telegram.org',
        wa: 'https://web.whatsapp.com'
    };
    window.open(networks[network], '_blank');
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
if (document.getElementById('feedbackForm')) {
    document.getElementById('feedbackForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = new FormData(this);
        const data = Object.fromEntries(formData);

        console.log('–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', data);
        alert('–°–ø–∞—Å–∏–±–æ! –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
        
        const modal = document.getElementById('contactModal');
        if (modal) modal.close();
        
        this.reset();
    });
}